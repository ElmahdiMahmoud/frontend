// # mixins + variables ( 05.02.14 )

// ============[ Variables ]============

// #avatars
$avatarLrg: 100px;
$avatarMid: calc-subPixels($avatarLrg, 24px);
$avatarSml:  calc-subPixels($avatarLrg, 65px);

// #colors


// #view port
$largeScreen: 1200px;
$midDevices : 998px;
$tablet 	  : 768px;
$landtoPort	: 480px;

// ============[ Mixins ]============

// Background Alpha
@mixin bgAlpha($color, $alpha) {
  $rgba: rgba($color, $alpha);
  $ie-hex-str: ie-hex-str($rgba);
  background-color: transparent;
  background-color: $rgba;
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
  zoom: 1;
}

// keyframes Mixin
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}

// Vendor Prefixing
@mixin vendorize($property, $value) {
    -webkit-#{$property}: $value;
    -moz-#{$property}: $value;
    -ms-#{$property}: $value;
    -o-#{$property}: $value;
    #{$property}: $value;
}

// Rounded Box
@mixin circle($size) {
     width: $size;
     height: $size;
     @include border-radius(100%); 
     overflow: hidden;
}

// #calculation functions

@function calc-addPixels($some-number, $another-number){
  @return $some-number + $another-number
}

@function calc-subPixels($some-number, $another-number){
  @return $some-number - $another-number
}

@function calc-divPixels($some-number, $another-number){
  @return $some-number / $another-number
}

@function calc-percent($target, $container) {
  @return ($target / $container) * 100%;
}

// #breakpoint
@mixin breakpoint($point) {

  // mid-devices = 998px and below
  @if $point == mid-devices {
    @media (max-width: $midDevices) { @content; }
  }

  // large-screen = 1200 and above
  @else if $point == large-screen {
    @media (min-width: $largeScreen) { @content; }
  } 

  // desktop = 1200 and below
  @else if $point == desktop {
    @media (max-width: $largeScreen) { @content; }
  } 

  // tablet = 768px and below
  @else if $point == tablet {
    @media (max-width: $tablet) { @content; }
  }

  // mobile = 480 and below
  @else if $point == mobile {
    @media (max-width: $landtoPort)  { @content; }
  } 
}

// #absolute positioned
@mixin pos-abs ($top, $right, $bottom, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}                     

// #triangle
@mixin triangle($dir, $color, $size) {
 
  @if $dir == "left" {
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    border-top: $size solid transparent;
  }
  @else if $dir == "right" {
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    border-top: $size solid transparent;
  }
  @else if $dir == "up" {
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
  }
  @else if $dir == "down" {
    border-right: $size solid transparent;
    border-left: $size solid transparent;
    border-top: $size solid $color;
  }
 
  height: 0;
  width: 0;
}

// #truncate text
@mixin text-truncate($boxSize) {
    width: $boxSize;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}
